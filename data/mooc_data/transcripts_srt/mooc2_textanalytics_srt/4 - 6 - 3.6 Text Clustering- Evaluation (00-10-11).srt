1
00:00:00,000 --> 00:00:06,538
[MUSIC]

2
00:00:06,538 --> 00:00:10,520
This lecture is about
evaluation of text clustering.

3
00:00:12,830 --> 00:00:18,240
So far we have talked about multiple
ways of doing text clustering but

4
00:00:18,240 --> 00:00:21,430
how do we know which
method works the best?

5
00:00:22,950 --> 00:00:25,540
So this has to do with evaluation.

6
00:00:25,540 --> 00:00:28,030
Now to talk about evaluation one must

7
00:00:28,030 --> 00:00:31,480
go back to the clustering bias that
we introduced at the beginning.

8
00:00:32,560 --> 00:00:36,770
Because two objects can be similar
depending on how you look at them,

9
00:00:37,780 --> 00:00:41,910
we must clearly specify
the perspective of similarity.

10
00:00:41,910 --> 00:00:46,200
Without that, the problem of
clustering is not well defined.

11
00:00:46,200 --> 00:00:51,740
So this perspective is also
very important for evaluation.

12
00:00:51,740 --> 00:00:53,350
If you look at this slide, and

13
00:00:53,350 --> 00:00:58,830
you can see we have two different
ways to cluster these shapes, and

14
00:00:58,830 --> 00:01:03,640
if you ask a question, which one is
the best, or which one is better?

15
00:01:03,640 --> 00:01:07,860
You actually see, there's no way to answer
this question without knowing whether

16
00:01:07,860 --> 00:01:13,420
we'd like to cluster based on shapes,
or cluster based on sizes.

17
00:01:13,420 --> 00:01:17,480
And that's precisely why
the perspective on clustering bias is

18
00:01:17,480 --> 00:01:18,680
crucial for evaluation.

19
00:01:19,710 --> 00:01:23,530
In general,
we can evaluate text clusters in two ways,

20
00:01:23,530 --> 00:01:27,580
one is direct evaluation, and
the other indirect evaluation.

21
00:01:27,580 --> 00:01:29,310
So in direct evaluation,

22
00:01:29,310 --> 00:01:34,060
we want to answer the following questions,
how close are the system-generated

23
00:01:34,060 --> 00:01:37,150
clusters to the ideal clusters
that are generated by humans?

24
00:01:38,580 --> 00:01:43,040
So the closeness here can be assessed

25
00:01:44,420 --> 00:01:50,330
from multiple perspectives and
that will help us characterize the quality

26
00:01:50,330 --> 00:01:55,320
of cluster result in multiple angles,
and this is sometimes desirable.

27
00:01:56,790 --> 00:02:04,010
Now we also want to quantify
the closeness because this would allow

28
00:02:04,010 --> 00:02:08,500
us to easily compare different measures
based on their performance figures.

29
00:02:09,870 --> 00:02:14,630
And finally, you can see, in this case,
we essentially inject the clustering bias

30
00:02:15,660 --> 00:02:21,660
by using humans, basically humans
would bring in the the need or

31
00:02:21,660 --> 00:02:24,260
desire to clustering bias.

32
00:02:24,260 --> 00:02:25,610
Now, how do we do that exactly?

33
00:02:25,610 --> 00:02:27,519
Well, the general procedure
would look like this.

34
00:02:28,590 --> 00:02:33,290
Given a test set which consists
of a lot of text objects,

35
00:02:33,290 --> 00:02:37,100
we can have humans to create
the ideal clustering result, that is,

36
00:02:37,100 --> 00:02:42,390
we're going to ask humans to partition
the objects to create the gold standard.

37
00:02:42,390 --> 00:02:48,490
And they will use their judgments based
on the need of a particular application

38
00:02:48,490 --> 00:02:54,470
to generate what they think are the best
clustering results, and this would be then

39
00:02:54,470 --> 00:02:59,990
used to compare with the system generated
clusters from the same test set.

40
00:03:01,380 --> 00:03:05,700
And ideally, we want the system results
to be the same as the human generated

41
00:03:05,700 --> 00:03:08,650
results, but in general,
they are not going to be the same.

42
00:03:08,650 --> 00:03:12,590
So we would like to then quantify the
similarity between the system-generated

43
00:03:12,590 --> 00:03:15,410
clusters and the gold standard clusters.

44
00:03:15,410 --> 00:03:20,110
And this similarity can also be measure
from multiple perspectives and this will

45
00:03:20,110 --> 00:03:26,750
give us various meshes to quantitatively
evaluate a cluster, a clustering result.

46
00:03:26,750 --> 00:03:34,140
And some of the commonly used measures
include the purity, which measures whether

47
00:03:34,140 --> 00:03:40,015
a cluster has a similar object from
the same cluster, in the gold standard.

48
00:03:40,015 --> 00:03:45,545
And normalized mutual information
is a commonly used measure

49
00:03:45,545 --> 00:03:50,485
which basically measures
based on the identity of

50
00:03:50,485 --> 00:03:54,935
cluster of object in the system generally.

51
00:03:54,935 --> 00:04:00,225
How well can you predict the cluster
of the object in the gold standard or

52
00:04:00,225 --> 00:04:01,440
vice versa?

53
00:04:01,440 --> 00:04:06,315
And mutual information captures, the
correlation between these cluster labels

54
00:04:06,315 --> 00:04:11,100
and normalized mutual information is often

55
00:04:11,100 --> 00:04:15,300
used for quantifying the similarity for

56
00:04:15,300 --> 00:04:19,220
this evaluation purpose,
F measure is another possible measure.

57
00:04:21,340 --> 00:04:24,405
Now again a thorough discussion
of this evaluation and

58
00:04:24,405 --> 00:04:28,810
these evaluation issues would be
beyond the scope of this course.

59
00:04:29,820 --> 00:04:34,730
I've suggested some reading in
the end that you can take a look

60
00:04:34,730 --> 00:04:35,840
at to know more about that.

61
00:04:36,950 --> 00:04:39,830
So here I just want to
discuss some high level ideas

62
00:04:39,830 --> 00:04:43,830
that would allow you to think about how
to do evaluation in your applications.

63
00:04:43,830 --> 00:04:48,120
The second way to evaluate text
clusters is to do indirect evaluation.

64
00:04:48,120 --> 00:04:52,540
So in this case the question to answer is,
how useful are the clustering results for

65
00:04:52,540 --> 00:04:55,120
the intended applications?

66
00:04:55,120 --> 00:04:59,730
Now this of course is application
specific question, so

67
00:04:59,730 --> 00:05:05,390
usefulness is going to depend
on specific applications.

68
00:05:07,140 --> 00:05:11,180
In this case, the clustering bias is
imposed by the independent application

69
00:05:11,180 --> 00:05:12,850
as well, so

70
00:05:12,850 --> 00:05:17,790
what counts as a best cluster result
would be dependent on the application.

71
00:05:19,098 --> 00:05:25,120
Now procedure wise we also would create
a test set with text objects for

72
00:05:25,120 --> 00:05:29,860
the intended application to quantify
the performance of the system.

73
00:05:32,880 --> 00:05:38,870
In this case,
what we care about is the contribution of

74
00:05:38,870 --> 00:05:43,960
clustering to some application so we often
have a baseline system to compare with.

75
00:05:45,040 --> 00:05:47,670
This could be the current system for
doing something, and

76
00:05:47,670 --> 00:05:51,820
then you hope to add
a clustering to improve it, or

77
00:05:51,820 --> 00:05:55,340
the baseline system could be using
a different clustering method.

78
00:05:55,340 --> 00:05:59,940
And then what you are trying
to experiment with, and

79
00:05:59,940 --> 00:06:03,110
you hope to have better
idea of word clustering.

80
00:06:03,110 --> 00:06:06,911
So in any case you have a baseline system
work with, and then you add a clustering

81
00:06:06,911 --> 00:06:10,110
algorithm to the baseline system
to produce a clustering system.

82
00:06:11,740 --> 00:06:14,870
And then we have to compare the
performance of your clustering system and

83
00:06:14,870 --> 00:06:18,660
the baseline system in terms
of the performance measure for

84
00:06:18,660 --> 00:06:19,940
that particular application.

85
00:06:21,070 --> 00:06:25,620
So in this case we call it indirect
evaluation of clusters because there's no

86
00:06:25,620 --> 00:06:30,040
explicit assessment of
the quality of clusters, but

87
00:06:30,040 --> 00:06:35,470
rather it's to assess the contribution
of clusters to a particular application.

88
00:06:37,350 --> 00:06:40,570
So, to summarize text clustering,

89
00:06:41,950 --> 00:06:46,750
it's a very useful unsupervised
general text mining technique, and

90
00:06:46,750 --> 00:06:52,860
it's particularly useful for obtaining
an overall picture of the text content.

91
00:06:52,860 --> 00:06:56,960
And this is often needed
to explore text data, and

92
00:06:56,960 --> 00:06:59,910
this is often the first step when
you deal with a lot of text data.

93
00:07:01,720 --> 00:07:06,610
The second application or
second kind of applications is through

94
00:07:06,610 --> 00:07:09,800
discover interesting clustering
structures in text data and

95
00:07:09,800 --> 00:07:11,660
these structures can be very meaningful.

96
00:07:13,330 --> 00:07:18,752
There are many approaches that can
be used to form text clustering and

97
00:07:18,752 --> 00:07:25,590
we discussed model based approaches and
some narrative based approaches.

98
00:07:25,590 --> 00:07:30,390
In general, strong clusters tend to
show up no matter what method is used.

99
00:07:30,390 --> 00:07:35,350
Also the effectiveness of a method
highly depends on whether the desired

100
00:07:35,350 --> 00:07:40,400
clustering bias is captured appropriately,
and this can be done either through using

101
00:07:40,400 --> 00:07:45,150
the right generating model, the model
design appropriate for the clustering, or

102
00:07:45,150 --> 00:07:49,460
the right similarity function
expressly define the bias.

103
00:07:49,460 --> 00:07:53,730
Deciding the optimal number of customers
is a very difficult problem for

104
00:07:53,730 --> 00:07:59,510
order cluster methods, and that's
because it's unsupervised algorithm,

105
00:07:59,510 --> 00:08:03,885
and there's no training there how to guide
us to select the best number of clusters.

106
00:08:05,125 --> 00:08:08,515
Now sometimes you may see some methods
that can automatically determine

107
00:08:08,515 --> 00:08:13,575
the number of clusters, but
in general that has some implied

108
00:08:13,575 --> 00:08:18,135
application of clustering bias there and
that's just not specified.

109
00:08:18,135 --> 00:08:23,900
Without clearly defining a clustering
bias, it's just impossible to say

110
00:08:23,900 --> 00:08:30,860
the optimal number of cluster is what,
so this important to keep in mind.

111
00:08:31,920 --> 00:08:35,650
And I should also say sometimes we
can also use application to determine

112
00:08:35,650 --> 00:08:39,320
the number of clusters, for example,
if you're clustering search results,

113
00:08:39,320 --> 00:08:43,340
then obviously you don't want
to generate the 100 clusters, so

114
00:08:43,340 --> 00:08:45,870
the number can be dictated
by the interface design.

115
00:08:46,880 --> 00:08:53,470
In other situations, we might be
able to use the fitness to data

116
00:08:53,470 --> 00:08:59,440
to assess whether we've got a good number
of clusters to explain our data well.

117
00:08:59,440 --> 00:09:04,330
And to do that,
you can vary the number of clusters and

118
00:09:04,330 --> 00:09:06,170
watch how well you can fit the data.

119
00:09:07,430 --> 00:09:10,740
In general when you add a more components
to a mixed model you should fit

120
00:09:10,740 --> 00:09:13,100
the data better because you, you don't,

121
00:09:13,100 --> 00:09:17,350
you can always set the probability
of using the new component as zero.

122
00:09:17,350 --> 00:09:23,930
So you can't in general fit the data
worse than before, but the question

123
00:09:23,930 --> 00:09:28,350
is as you add more components would you be
able to significantly improve the fitness

124
00:09:28,350 --> 00:09:33,890
of the data and that can be used to
determine the right number of clusters.

125
00:09:33,890 --> 00:09:36,610
And finally evaluation
of clustering results,

126
00:09:36,610 --> 00:09:41,560
this kind can be done both directly and
indirectly, and we often would like to

127
00:09:41,560 --> 00:09:46,590
do both in order to get a good sense
about how well our method works.

128
00:09:46,590 --> 00:09:52,206
So here's some suggested reading and
this is particularly useful

129
00:09:52,206 --> 00:09:58,838
to better understand how the matches
are calculated and clustering in general

130
00:09:58,838 --> 00:10:08,838
[MUSIC]