[SOUND] So to summarize our
discussion of recommender systems
in some sense the filtering
task of recommended is easy and
in some other sense and
the task is actually difficult.
So its easy because the user
dexpectations, though in this case,
the system takes initiative to
push the information to the user.
So the user doesn't really make an effort.
So any recommendation is
better than nothing, right?
So unless you recommend
that all the you know,
noisy items or useless documents,
if you can recommend that
some useful information uses general,
would appreciate it, all right.
So that's in that sense, that's easy.
However, filtering is
actually a much harder task.
Because you have to make a binary
decision, and you can't afford waiting for
a lot of items and then you will
whether one item is better than others.
You have to make a decision
when you see this item.
Let's think about news filtering
as well as you see the news.
And you have to decide whether the news
would be interesting to a user.
If you wait for a few days, well, even if
you can make accurate recommendation of
the most relevant news, only two days
wouldn't be significantly decreased.
Another reason why it's hard,
it's because of data sparseness.
If you think of this as a learning
problem in collaborative filtering, for
example, it's purely based on
learning from the past ratings.
So if you don't have many ratings,
there's really not much you can do, right?
And may I just mention this problem.
This is actually a very serious problem.
But of course there are strategies that
have been proposed to solve the problem.
And there are,
there are different strategies that
we will use to alleviate the problem.
We can use, for example, more user
information to assess their similarity
instead of using the preferences.
Of these users on these items
the immediate additional information or
better for
about the user etcetera and, and
we also talked about the two
strategies for filtering task.
One is content based where we
look at items in clarity you
know there's a clarity of filtering
where we look at the user similarity.
And they obviously can be combined.
In a practical system, you can imagine,
they generally would have to be combined.
So that will give us a hybrid strategy for
filtering.
A, and, we also could recall that we
talked about push versus
pull as two strategies for
getting access to the text data.
And recommend the system is it will help,
users in the push mode.
And search engines are,
certain users in the pull mode.
Of using the tool should be combined, and
they can be combined into have a system
that can support user with multiple
mode and formation access.
So in the future, we could anticipate for
such a system to be more usable to a user.
And also this is a active research area so
there are a lot of new algorithms being,
being proposed over time.
In particular, those new algorithms tend
to use a lot of context information.
Now the context here could be
the context of the user, you know,
it could also be context of documents or
items.
The items are not isolated.
They are connected in many ways.
The users might form social network as
well, so there's a rich context there
that we can leverage in order to really
solve the problem well, and then that's
a active research area where also machine
learning algorithms have been applied.
Here are some additional readings in
the handbook called Recommender Systems.
And has a collection of
a lot of good articles that
can give you an overview
of a number of specific
approaches to recommender systems.
[MUSIC]

